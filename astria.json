sudo apt-get update  && sudo apt-get upgrade
apt install cargo
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source "$HOME/.cargo/env"
rustc –version
apt install git
git clone --branch dusk-3 https://github.com/astriaorg/dev-cluster.git
cargo install astria-cli --git=https://github.com/astriaorg/astria --tag=cli-v0.3.1 --locked
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl version --client
curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
sudo apt-get install apt-transport-https --yes
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm
[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind
wget -qO - 'https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub' | gpg --dearmor | sudo tee /usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg 1> /dev/null
echo "deb [arch=all,$(dpkg --print-architecture) signed-by=/usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg] https://proget.makedeb.org prebuilt-mpr $(lsb_release -cs)" | sudo tee /etc/apt/sources.list.d/prebuilt-mpr.list
sudo apt update
sudo apt install just
cargo install --git https://github.com/foundry-rs/foundry --profile local --locked forge cast chisel anvil
apt install screen
screen -S rollup
cd dev-cluster
just create-cluster
just deploy-ingress-controller
cast w new
export ROLLUP_FAUCET_PRIV_KEY=privatekeyimiziburayayazıyoruz.
export ROLLUP_GENESIS_ACCOUNTS=genesisadresiburayayazıyoruz:100000000000000000000
export ROLLUP_NAME=rollupismimiziburayayazıyoruz
export ROLLUP_NETWORK_ID=networkidmiziburayayazıyoruz
astria-cli rollup config create
export ROLLUP_CONF_FILE=$ROLLUP_NAME-rollup-conf.yaml
cat $ROLLUP_CONF_FILE
astria-cli sequencer account create
export SEQUENCER_PRIV_KEY=burayasequencerprivatekeyiyazıyoruz
export SEQUENCER_ACCOUNT_ADDRESS=burayasequenceradresimiziyazıyoruz
astria-cli sequencer account balance $SEQUENCER_ACCOUNT_ADDRESS
astria-cli rollup deployment create \
  --config $ROLLUP_CONF_FILE \
  --faucet-private-key $ROLLUP_FAUCET_PRIV_KEY \
  --sequencer-private-key $SEQUENCER_PRIV_KEY
kubectl get pods -n astria-dev-cluster -w
export ETH_RPC_URL=http://executor.$ROLLUP_NAME.localdev.me/
export REC_ADDR=tokengonderecegimizmetamaskadresigirelim
cast send $REC_ADDR --value 1000000000000000 --private-key $ROLLUP_FAUCET_PRIV_KEY
cast balance $REC_ADDR
